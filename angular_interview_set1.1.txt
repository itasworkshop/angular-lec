1. what are in directives in angular?
ans - set of Direction/Instruction to DOM. for making HTML more powerful. Inbuilt or user defined.
	core api -> @angular/core
example - component, ngIf,ngFor etc

2. What are types of directives?
ans - 	1. Component
	-component is a directive, basic building block of angular UI, Angular app is tree structure of components.
	-@Component annotation is used to create component.
	-Component defines a class which contains data and logic, style and HTML template, metadata defines HTML template style and 		selector. 
	-must belong to NgModule. 
	-Always associated with template.

	2. Structural Directives - *ngFor,*ngIf (syntactic sugar)
	- changes structure of the view
	- change DOM layout by adding or removing DOM elements.

	3. Attribute Directive - ngStyle
	- directives used as attribute of elements
	- change appearance or behaviour of an element, compoent or another directive.


3. What does * stands for in *ngIf?
ans - syntactic sugar for
<div *ngIf="name" class="name">{{name}}</div>

<ng-template [ngIf]="name">
  <div class="name">{{name}}</div>
</ng-template>

and understands it as above, angular is translating *ngIf into <ng-template> element where [ngIF] property is binding.
but from below code is actualy rendered with diagnostic comment.

<!--bindings={
  "ng-reflect-ng-if": "Rajesh"
}-->

4. How do you create user defined directive?
ans - By using @Directive annotation.

5. What are pipes? how do we use built in pipes?
ans: used for transforming input and formatting, exa - 
DatePipe, UpperCasePipe, LowerCasePipe, CurrencyPipe, DecimalPipe and PercentPipe.

6. what is chaining pipes? or Can we use more than one pipe at a time?how?
ans: yes we can chain multiple pipes
<p>{{joindate | date:'MMM' | uppercase}}</p>

7. What is difference among "pipe(|)", ".pipe" and "| async"?
ans:

8. Can we create our own pipe or how to create customized pipe?
ans: using @Pipe({name:'custompipe'})

9. How do you check for NaN in advance?
ans: isNaN()
Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).

10. How do you check for undefined, null?
ans: 

11. What are Lifecycle hooks of component or directives?
ans: - In a lifcycle of components or directives there are few moments during lifecycle of component like creating ,updating and destroying instances in execution. we have some methods of execution during these life cycle- lifecycle hook(methods).
Exa- ngOnInit, ngOnChanges, ngOnDestroy.

11.1 what is difference between OnInit and ngOnInit?
ans:OnInit is interface and ngOnInit() is lifecycle hook method.

12. When ngOnInit is called?
ans: 

13. Which one of these is called first - ngOnChanges or ngOnInit? why?
ans: ngOnChanges is called first.

14. Which life cycle hook is called first and last out od all methods?
ans: 1) ngOnChanges- first of all 2) ngOnDestroy- last after all methods.

15. What is sequence of LifeCycle hook methods?
ans: First of constructor- DI
	1) ngOnchanges()
	2) ngOnint()
	3) ngDocheck() - after  ngOnchanges() on every change detection and after oninit on first run.
	4) ngAfterContentInit() - once after first DoCheck
	5) ngAfterContentChecked() - after ngAfterContentInit() once and after every Docheck
	6)


#1 name is not known at construction
#2 OnChanges: name initialized to "Book Example 1"; previous name initialized to "undefined"
#3 OnInit
#4 DoCheck
#5 AfterContentInit
#6 AfterContentChecked
#7 AfterViewInit
#8 AfterViewChecked


What is ngModle?
ans: two way binding.

16) What is @Input decorator?/parent to child interaction.
17) What is @Output decorator?.child to parent interaction.











